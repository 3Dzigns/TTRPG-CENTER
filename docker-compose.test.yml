version: '3.8'

networks:
  ttrpg-test-net:
    driver: bridge
    name: ttrpg-test-net

volumes:
  pg_data_test:
    name: ttrpg_pg_data_test
  mongo_data_test:
    name: ttrpg_mongo_data_test
  neo4j_data_test:
    name: ttrpg_neo4j_data_test
  redis_data_test:
    name: ttrpg_redis_data_test
  logs_test:
    name: ttrpg_logs_test
  uploads_test:
    name: ttrpg_uploads_test

services:
  app-test:
    image: ${CONTAINER_IMAGE:-ghcr.io/ttrpg/app:latest}
    container_name: ttrpg-app-test
    ports:
      - "8181:8000"  # TEST environment port
    environment:
      - APP_ENV=test
      - PORT=8000
      # Database connections
      - POSTGRES_HOST=postgres-test
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ttrpg_test
      - POSTGRES_USER=${POSTGRES_USER:-ttrpg_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ttrpg_test_pass}
      - MONGO_URI=mongodb://mongo-test:27017/ttrpg_test
      - NEO4J_URI=bolt://neo4j-test:7687
      - NEO4J_USER=${NEO4J_USER:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-test_password}
      - REDIS_URL=redis://redis-test:6379/0
      # External services
      - ASTRA_DB_API_ENDPOINT=${ASTRA_DB_API_ENDPOINT_TEST:-${ASTRA_DB_API_ENDPOINT}}
      - ASTRA_DB_APPLICATION_TOKEN=${ASTRA_DB_APPLICATION_TOKEN_TEST:-${ASTRA_DB_APPLICATION_TOKEN}}
      - ASTRA_DB_ID=${ASTRA_DB_ID_TEST:-${ASTRA_DB_ID}}
      - ASTRA_DB_KEYSPACE=${ASTRA_DB_KEYSPACE_TEST:-test_keyspace}
      - ASTRA_DB_REGION=${ASTRA_DB_REGION:-us-east-2}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # Security
      - SECRET_KEY=${SECRET_KEY_TEST:-${SECRET_KEY}}
      - JWT_SECRET=${JWT_SECRET_TEST:-${JWT_SECRET}}
      # Application settings
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CACHE_TTL_SECONDS=${CACHE_TTL_SECONDS:-300}  # 5 minute cache for TEST
      - ARTIFACTS_PATH=/app/artifacts
      # Testing specific
      - ENVIRONMENT=test
      - ENABLE_DEBUG_LOGGING=${ENABLE_DEBUG_LOGGING:-false}
      - TEST_MODE=true
    volumes:
      - logs_test:/var/log/ttrpg
      - uploads_test:/data/uploads
      - ./artifacts/test:/app/artifacts
    networks:
      - ttrpg-test-net
    depends_on:
      postgres-test:
        condition: service_healthy
      mongo-test:
        condition: service_healthy
      neo4j-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s  # Longer startup time for TEST
    restart: on-failure:3
    labels:
      - "ttrpg.environment=test"
      - "ttrpg.version=${VERSION:-unknown}"
      - "ttrpg.deployment.type=container"
    
  postgres-test:
    image: postgres:16-alpine
    container_name: ttrpg-postgres-test
    environment:
      - POSTGRES_DB=ttrpg_test
      - POSTGRES_USER=${POSTGRES_USER:-ttrpg_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ttrpg_test_pass}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - pg_data_test:/var/lib/postgresql/data
    networks:
      - ttrpg-test-net
    ports:
      - "5433:5432"  # Different port for TEST
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ttrpg_user} -d ttrpg_test"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "ttrpg.environment=test"
      - "ttrpg.service=postgres"

  mongo-test:
    image: mongo:7-jammy
    container_name: ttrpg-mongo-test
    environment:
      - MONGO_INITDB_DATABASE=ttrpg_test
    volumes:
      - mongo_data_test:/data/db
    networks:
      - ttrpg-test-net
    ports:
      - "27018:27017"  # Different port for TEST
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "ttrpg.environment=test"
      - "ttrpg.service=mongo"

  neo4j-test:
    image: neo4j:5.23-community
    container_name: ttrpg-neo4j-test
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-test_password}
      - NEO4J_dbms_default__database=ttrpg_test
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
      - NEO4J_dbms_memory_pagecache_size=512m
    volumes:
      - neo4j_data_test:/data
    networks:
      - ttrpg-test-net
    ports:
      - "7475:7474"  # Different HTTP port for TEST
      - "7688:7687"  # Different Bolt port for TEST
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${NEO4J_USER:-neo4j}", "-p", "${NEO4J_PASSWORD:-test_password}", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "ttrpg.environment=test"
      - "ttrpg.service=neo4j"

  redis-test:
    image: redis:7-alpine
    container_name: ttrpg-redis-test
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data_test:/data
    networks:
      - ttrpg-test-net
    ports:
      - "6380:6379"  # Different port for TEST
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "ttrpg.environment=test"
      - "ttrpg.service=redis"