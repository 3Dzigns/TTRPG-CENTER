{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://ttrpg-center.com/schemas/feature_request.schema.json",
  "title": "TTRPG Center Feature Request Schema",
  "description": "JSON schema for TTRPG Center feature requests (US-706)",
  "type": "object",
  "required": ["request_id", "title", "description", "priority", "requester", "status", "created_at"],
  "properties": {
    "request_id": {
      "type": "string",
      "pattern": "^FR-[0-9]{3,20}$",
      "description": "Unique feature request ID (FR-{timestamp}[optional-suffix])"
    },
    "title": {
      "type": "string",
      "minLength": 5,
      "maxLength": 200,
      "pattern": "^[a-zA-Z0-9\\s\\-_.,()]+$",
      "description": "Feature request title"
    },
    "description": {
      "type": "string",
      "minLength": 10,
      "maxLength": 5000,
      "description": "Detailed feature description"
    },
    "priority": {
      "type": "string",
      "enum": ["low", "medium", "high", "critical"],
      "description": "Feature priority level"
    },
    "requester": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9._-]+$",
      "description": "Username of person submitting request"
    },
    "status": {
      "type": "string",
      "enum": ["pending", "approved", "rejected", "in_progress", "completed", "cancelled"],
      "description": "Current status of feature request"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp when request was created"
    },
    "updated_at": {
      "type": ["string", "null"],
      "format": "date-time",
      "description": "ISO 8601 timestamp when request was last updated"
    },
    "approved_by": {
      "type": ["string", "null"],
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9._-]+$",
      "description": "Admin who approved/rejected the request"
    },
    "rejection_reason": {
      "type": ["string", "null"],
      "minLength": 1,
      "maxLength": 1000,
      "description": "Reason for rejection if status is rejected"
    },
    "category": {
      "type": "string",
      "enum": ["ui", "api", "database", "security", "performance", "integration", "documentation", "testing", "other"],
      "description": "Feature category"
    },
    "business_value": {
      "type": "string",
      "enum": ["low", "medium", "high", "critical"],
      "description": "Expected business value"
    },
    "effort_estimate": {
      "type": "integer",
      "minimum": 1,
      "maximum": 1000,
      "description": "Estimated effort in hours"
    },
    "acceptance_criteria": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 500
      },
      "maxItems": 20,
      "description": "List of acceptance criteria"
    },
    "user_story": {
      "type": "string",
      "minLength": 10,
      "maxLength": 1000,
      "pattern": "^As a .* I want .* so that .*$",
      "description": "User story in standard format"
    },
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^(FR|US|NFR)-[0-9]{3,13}$"
      },
      "uniqueItems": true,
      "maxItems": 10,
      "description": "List of dependent requirement/feature IDs"
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 50,
        "pattern": "^[a-zA-Z0-9_-]+$"
      },
      "uniqueItems": true,
      "maxItems": 10,
      "description": "Feature tags for categorization"
    },
    "technical_notes": {
      "type": "string",
      "maxLength": 2000,
      "description": "Technical implementation notes"
    },
    "risk_assessment": {
      "type": "object",
      "properties": {
        "technical_risk": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"]
        },
        "business_risk": {
          "type": "string",
          "enum": ["low", "medium", "high", "critical"]
        },
        "mitigation_strategy": {
          "type": "string",
          "maxLength": 1000
        }
      },
      "additionalProperties": false
    },
    "stakeholders": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "role"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "role": {
            "type": "string",
            "enum": ["product_owner", "developer", "tester", "business_analyst", "end_user", "other"]
          },
          "involvement": {
            "type": "string",
            "enum": ["primary", "secondary", "reviewer", "informed"]
          }
        },
        "additionalProperties": false
      },
      "maxItems": 10
    },
    "comments": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["author", "timestamp", "content"],
        "properties": {
          "author": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9._-]+$"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "content": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          "comment_type": {
            "type": "string",
            "enum": ["general", "technical", "business", "question", "concern"]
          }
        },
        "additionalProperties": false
      },
      "maxItems": 50
    },
    "external_links": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["url", "description"],
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "maxLength": 500
          },
          "description": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "link_type": {
            "type": "string",
            "enum": ["documentation", "mockup", "reference", "issue", "other"]
          }
        },
        "additionalProperties": false
      },
      "maxItems": 10
    }
  },
  "additionalProperties": false,
  "allOf": [
    {
      "if": {
        "properties": {
          "status": {
            "const": "rejected"
          }
        }
      },
      "then": {
        "required": ["rejection_reason"]
      }
    },
    {
      "if": {
        "properties": {
          "status": {
            "enum": ["approved", "rejected"]
          }
        }
      },
      "then": {
        "required": ["approved_by", "updated_at"]
      }
    }
  ]
}
